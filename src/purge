#!/bin/bash

# @author Usb Key
# @mail usbkey9@gmail.com
# @author Caio Oliveira
# @mail caiooliveirafarias0@gmail.com

#Follow symlink and cd to right directory
SOURCE="${BASH_SOURCE[0]}"
while [[ -h "$SOURCE" ]]; do
	DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
	SOURCE="$(readlink "$SOURCE")"
	[[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE"
done
cd "$( cd -P "$( dirname "$SOURCE" )" && pwd )"

source ./common $$


#Keep only up-to-date all minor versions
function keepMinorVersion(){
	local index=0;
	local occurence=0;
	local tmpKers=();

	kernels=($(echo "${kernels[@]}" | sort -r));

	for kernel in "${kernels[@]}"
	do
		occurence=$(echo "${kernels[@]}" | grep -o $(echo "$kernel" | cut -d'.' -f1,2) | wc -l)
		if [[ $occurence > 1 ]]; then
			tmpKers+=($kernel);
			unset kernels[index];
		fi

		((index++));
	done

	kernels=($(echo "${tmpKers[@]}" | sort));
}

function remove() {
	for kernel in "${kernels[@]}"
	do
		local tmpKer=$(dpkg -l | awk '{ print $2 }' | grep "$kernel");

		if ! execCmd "sudo apt-get purge -y $tmpKer"; then
			touch /tmp/purge.err;
			notify "Kernel purge failed" "Please consult $logPath for details" "-u critical";
			fatalError "Kernel purge failed. See errors above";
		fi
	done
}

if [[ -f $cfgPath ]]; then
	source $cfgPath;
else
	arm=0;
fi

current=$(uname -r | cut -d'-' -f-2);
kernels=($(dpkg -l | grep "linux-headers" | grep -v "generic" | awk '{ print $2 }' | cut -d'-' -f3- | sort -uV | grep -v "$current" | head -n -1));

keepMinorVersion

displayTitle "UkTools Purge";
displaySubTitle "This script will only keep last versions of each installed minor versions";

echo "
------------------------------- Current Version -------------------------------
Linux Kernel $current $(uname -r | cut -d'-' -f3) ($(uname -r))
";

if [[ ${#kernels[@]} < 1 ]]; then
	echo "Nothing to remove";
else
	echo "------------------------------ Versions to Remove -----------------------------"
	printf '%s\n' "${kernels[@]}";
	sleep 2;
	echo

	if [[ $arm = 0 ]]; then
		read -p "---Do you want to remove the old kernels/headers versions? (Y/n): " -n 1 -t 10 -s rr
		case "$rr" in
			Y)	echo "Purging";
				sleep 2;

				remove ;;
			*)	echo "Keep old kernels untouched" ;;
		esac;
	else
		echo
		displaySubTitle "Purging";

		remove;

		echo
		displaySubTitle "Purge Finished";
	fi
fi